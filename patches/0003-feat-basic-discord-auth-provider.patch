From 478f2810a95eaced737bedc44adb72102676f76f Mon Sep 17 00:00:00 2001
From: Jack Baron <jackmbaron@gmail.com>
Date: Thu, 27 Oct 2022 22:57:19 +0100
Subject: [PATCH 3/4] feat: basic discord auth provider only works with a
 single guild via the DISCORD_GUILD_ID env var

---
 app/scenes/Login/Notices.tsx            |  5 ++
 package.json                            |  2 +
 server/env.ts                           | 20 ++++++
 server/errors.ts                        |  8 +++
 server/routes/auth/providers/discord.ts | 87 +++++++++++++++++++++++++
 yarn.lock                               | 18 ++++-
 6 files changed, 139 insertions(+), 1 deletion(-)
 create mode 100644 server/routes/auth/providers/discord.ts

diff --git a/app/scenes/Login/Notices.tsx b/app/scenes/Login/Notices.tsx
index c43816de..47237d32 100644
--- a/app/scenes/Login/Notices.tsx
+++ b/app/scenes/Login/Notices.tsx
@@ -98,6 +98,11 @@ export default function Notices() {
           team domain.
         </NoticeAlert>
       )}
+      {notice === "guild-not-allowed" && (
+        <NoticeAlert>
+          Authentication failed - You are not in the required Discord guild.
+        </NoticeAlert>
+      )}
     </>
   );
 }
diff --git a/package.json b/package.json
index 5e6e48a1..44c10ebd 100644
--- a/package.json
+++ b/package.json
@@ -140,6 +140,7 @@
     "outline-icons": "^1.44.0",
     "oy-vey": "^0.11.2",
     "passport": "^0.6.0",
+    "passport-discord": "^0.1.4",
     "passport-google-oauth2": "^0.2.0",
     "passport-oauth2": "^1.6.1",
     "passport-slack-oauth2": "^1.1.1",
@@ -258,6 +259,7 @@
     "@types/node": "18.0.6",
     "@types/node-fetch": "^2.6.2",
     "@types/nodemailer": "^6.4.4",
+    "@types/passport-discord": "^0.1.6",
     "@types/passport-oauth2": "^1.4.11",
     "@types/prosemirror-commands": "^1.0.1",
     "@types/prosemirror-dropcursor": "^1.0.0",
diff --git a/server/env.ts b/server/env.ts
index a68a1154..828bab11 100644
--- a/server/env.ts
+++ b/server/env.ts
@@ -429,6 +429,26 @@ export class Environment {
     process.env.AZURE_RESOURCE_APP_ID
   );
 
+  /**
+   * Discord OAuth2 client credentials. To enable authentication with Discord.
+   */
+  @IsOptional()
+  @CannotUseWithout("DISCORD_CLIENT_SECRET")
+  @CannotUseWithout("DISCORD_GUILD_ID")
+  public DISCORD_CLIENT_ID = this.toOptionalString(
+    process.env.DISCORD_CLIENT_ID
+  );
+
+  @IsOptional()
+  @CannotUseWithout("DISCORD_CLIENT_ID")
+  public DISCORD_CLIENT_SECRET = this.toOptionalString(
+    process.env.DISCORD_CLIENT_SECRET
+  );
+
+  @IsOptional()
+  @CannotUseWithout("DISCORD_CLIENT_ID")
+  public DISCORD_GUILD_ID = this.toOptionalString(process.env.DISCORD_GUILD_ID);
+
   /**
    * OICD client credentials. To enable authentication with any
    * compatible provider.
diff --git a/server/errors.ts b/server/errors.ts
index fc5b6c0f..8829e30f 100644
--- a/server/errors.ts
+++ b/server/errors.ts
@@ -133,6 +133,14 @@ export function MaximumTeamsError(
   });
 }
 
+export function DiscordInvalidGuildError(
+  message = "You are not in the required Discord guild"
+) {
+  return httpErrors(400, message, {
+    id: "guild_not_allowed",
+  });
+}
+
 export function EmailAuthenticationRequiredError(
   message = "User must authenticate with email",
   redirectUrl = "/"
diff --git a/server/routes/auth/providers/discord.ts b/server/routes/auth/providers/discord.ts
new file mode 100644
index 00000000..d19d4b58
--- /dev/null
+++ b/server/routes/auth/providers/discord.ts
@@ -0,0 +1,87 @@
+import passport from "@outlinewiki/koa-passport";
+import Router from "koa-router";
+import { Strategy as DiscordStrategy } from "passport-discord";
+import accountProvisioner from "@server/commands/accountProvisioner";
+import env from "@server/env";
+import { DiscordInvalidGuildError } from "@server/errors";
+import passportMiddleware from "@server/middlewares/passport";
+import { StateStore } from "@server/utils/passport";
+
+const router = new Router();
+const providerName = "discord";
+
+export const config = {
+  name: "Discord",
+  enabled: !!env.DISCORD_CLIENT_ID,
+};
+
+const scopes = ["identify", "email", "guilds"];
+
+if (env.DISCORD_CLIENT_ID && env.DISCORD_CLIENT_SECRET) {
+  const strategy = new DiscordStrategy(
+    {
+      clientID: env.DISCORD_CLIENT_ID,
+      clientSecret: env.DISCORD_CLIENT_SECRET,
+      callbackURL: `${env.URL}/auth/discord.callback`,
+      passReqToCallback: true,
+      // @ts-expect-error StateStore
+      store: new StateStore() as undefined,
+      scope: scopes,
+    },
+    async function (req, accessToken, refreshToken, profile, done) {
+      try {
+        const guild = profile.guilds?.find(
+          (guild) => guild.id === env.DISCORD_GUILD_ID
+        );
+
+        if (!guild) {
+          throw DiscordInvalidGuildError();
+        }
+
+        if (!profile.email) {
+          throw new Error("missing email, should never happen");
+        }
+
+        const result = await accountProvisioner({
+          ip: req.ip,
+          team: {
+            name: guild.name,
+            domain: guild.id,
+            subdomain: guild.id,
+            avatarUrl:
+              guild.icon &&
+              `https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png`,
+          },
+          user: {
+            name: profile.username,
+            email: profile.email,
+            avatarUrl:
+              profile.avatar &&
+              `https://cdn.discordapp.com/avatars/${profile.id}/${profile.avatar}.png`,
+          },
+          authenticationProvider: {
+            name: providerName,
+            providerId: guild.id,
+          },
+          authentication: {
+            providerId: profile.id,
+            accessToken,
+            refreshToken,
+            scopes,
+          },
+        });
+        return done(null, result.user, result);
+      } catch (err) {
+        // @ts-expect-error Allow null profile
+        return done(err, null);
+      }
+    }
+  );
+
+  passport.use(strategy);
+
+  router.get("discord", passport.authenticate(providerName));
+  router.get("discord.callback", passportMiddleware(providerName));
+}
+
+export default router;
diff --git a/yarn.lock b/yarn.lock
index d82c2432..b681d933 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -2970,7 +2970,16 @@
   resolved "https://registry.yarnpkg.com/@types/parse5/-/parse5-6.0.3.tgz#705bb349e789efa06f43f128cef51240753424cb"
   integrity sha512-SuT16Q1K51EAVPz1K29DJ/sXjhSQ0zjvsypYJ6tlwVsRV9jwW5Adq2ch8Dq8kDBCkYnELS7N7VNCSB5nC56t/g==
 
-"@types/passport-oauth2@^1.4.11":
+"@types/passport-discord@^0.1.6":
+  version "0.1.6"
+  resolved "https://registry.yarnpkg.com/@types/passport-discord/-/passport-discord-0.1.6.tgz#2b35b14c0965088600a85b423d4498abd73eb2d2"
+  integrity sha512-fB9JMzNDzx9ToIsd5fGYpYrwGmqhPhebyFFb3eFL3u5dY1R8K42pszAXSeCXTZxbf1WZpLsydTUNbciqmDkqCg==
+  dependencies:
+    "@types/express" "*"
+    "@types/passport" "*"
+    "@types/passport-oauth2" "*"
+
+"@types/passport-oauth2@*", "@types/passport-oauth2@^1.4.11":
   version "1.4.11"
   resolved "https://registry.yarnpkg.com/@types/passport-oauth2/-/passport-oauth2-1.4.11.tgz#fbca527ecb44258774d17bcb251630c321515fa9"
   integrity sha512-KUNwmGhe/3xPbjkzkPwwcPmyFwfyiSgtV1qOrPBLaU4i4q9GSCdAOyCbkFG0gUxAyEmYwqo9OAF/rjPjJ6ImdA==
@@ -11588,6 +11597,13 @@ pascalcase@^0.1.1:
   resolved "https://registry.yarnpkg.com/pascalcase/-/pascalcase-0.1.1.tgz#b363e55e8006ca6fe21784d2db22bd15d7917f14"
   integrity sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=
 
+passport-discord@^0.1.4:
+  version "0.1.4"
+  resolved "https://registry.yarnpkg.com/passport-discord/-/passport-discord-0.1.4.tgz#9265be11952cdd54d77c47eaae352834444cf0f6"
+  integrity sha512-VJWPYqSOmh7SaCLw/C+k1ZqCzJnn2frrmQRx1YrcPJ3MQ+Oa31XclbbmqFICSvl8xv3Fqd6YWQ4H4p1MpIN9rA==
+  dependencies:
+    passport-oauth2 "^1.5.0"
+
 passport-google-oauth2@^0.2.0:
   version "0.2.0"
   resolved "https://registry.yarnpkg.com/passport-google-oauth2/-/passport-google-oauth2-0.2.0.tgz#fc9ea59e7091f02e24fd16d6be9257ea982ebbc3"
-- 
2.37.3.windows.1

